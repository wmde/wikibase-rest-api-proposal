{
  "openapi": "3.0.2",
  "info": {
    "title": "Wikibase REST API Proposal",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://www.wikidata.org/w/rest.php/wikibase/v0"
    }
  ],
  "components": {
    "parameters": {
      "fields": {
        "in": "query",
        "name": "_fields",
        "description": "Comma separated list of fields to include in each response object",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "entityId": {
        "in": "path",
        "name": "entityId",
        "description": "The id of the required item or property",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(Q|P)[1-9]\\d{0,9}$"
        }
      },
      "entityType": {
        "in": "path",
        "name": "entityType",
        "description": "The type of the required entity. Can only be one of `items` or `properties`.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "items",
            "properties"
          ]
        }
      },
      "lang": {
        "name": "lang",
        "in": "path",
        "description": "Resource language",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[a-z]{2}[a-z0-9-]*$"
        }
      },
      "offset": {
        "in": "query",
        "description": "Results from offset index number and up",
        "name": "offset",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "page": {
        "in": "query",
        "description": "Result page number",
        "name": "page",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "per_page": {
        "in": "query",
        "description": "Number of results per page",
        "name": "per_page",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "qualifierHash": {
        "in": "path",
        "name": "qualifierHash",
        "description": "Single qualifier by hash",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "referenceHash": {
        "in": "path",
        "name": "referenceHash",
        "description": "Single reference by hash",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "statementId": {
        "in": "path",
        "name": "statementId",
        "description": "The id of the required statement",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^(Q|P)[1-9]\\d{0,9}\\$.+$"
        }
      },
      "wikiId": {
        "name": "wikiId",
        "in": "path",
        "description": "The id of the wiki that the sitelink directs to",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ifNoneMatch": {
        "name": "If-None-Match",
        "in": "header",
        "description": "Conditionally request a resource only if changed since specified entity revision number",
        "schema": {
          "type": "string"
        }
      },
      "ifModifiedSince": {
        "name": "If-Modified-Since",
        "in": "header",
        "description": "Conditionally request a resource only if it changed since specified date",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "OK": {
        "description": "OK",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        }
      },
      "NotModified": {
        "description": "The specified resource has not modified since last provided revision number or date",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UnexpectedError": {
        "description": "An unexpected error has occurred",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Entity": {
        "description": "A single wikibase entity",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Entity"
            }
          }
        }
      },
      "EntityList": {
        "description": "A list of wikibase entities",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Entity"
              }
            }
          }
        }
      },
      "EntityAliases": {
        "description": "A list of aliases by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AliasList"
            }
          }
        }
      },
      "EntityDescription": {
        "description": "Entity Description by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Term"
            }
          }
        }
      },
      "EntityLabel": {
        "description": "Entity Label by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Term"
            }
          }
        }
      },
      "EntityAliasesList": {
        "description": "A list of aliases by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AliasList"
              }
            }
          }
        }
      },
      "EntityDescriptionList": {
        "description": "Entity Description by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Term"
              }
            }
          }
        }
      },
      "EntityLabelList": {
        "description": "Entity Label by language",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Term"
              }
            }
          }
        }
      },
      "Sitelink": {
        "description": "A single sitelink",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Sitelink"
            }
          }
        }
      },
      "SitelinkList": {
        "description": "A single sitelink",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Sitelink"
              }
            }
          }
        }
      },
      "Statement": {
        "description": "A single wikibase statement",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Statement"
            }
          }
        }
      },
      "StatementList": {
        "description": "A list of wikibase statements",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Statement"
              }
            }
          }
        }
      },
      "Snak": {
        "description": "A property - value pair Object",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Snak"
            }
          }
        }
      },
      "SnakList": {
        "description": "A list of Snak (Property - Value pair) Objects",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Snak"
              }
            }
          }
        }
      },
      "SnakMap": {
        "description": "A map of propertyId to Snak Object",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SnakMap"
            }
          }
        }
      },
      "SnakMapList": {
        "description": "A list of Snakmaps",
        "headers": {
          "Last-Modified": {
            "schema": {
              "type": "string"
            },
            "description": "Last modified date"
          },
          "ETag": {
            "schema": {
              "type": "string"
            },
            "description": "Last entity revision number"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SnakMap"
              }
            }
          }
        }
      },
      "ReferenceHash": {
        "description": "Modified Reference Hash",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReferenceHash"
            }
          }
        }
      },
      "QualifierHash": {
        "description": "Modified Qualifier Hash",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/QualifierHash"
            }
          }
        }
      }
    },
    "schemas": {
      "Labels": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Term"
        }
      },
      "Descriptions": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Term"
        }
      },
      "Aliases": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/AliasList"
        }
      },
      "AliasList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Term"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "DocumentPatch": {
        "description": "A JSONPatch object as defined by RFC 6902",
        "type": "object",
        "properties": {
          "op": {
            "description": "The operation to perform",
            "type": "string",
            "enum": [
              "add",
              "remove",
              "replace"
            ]
          },
          "path": {
            "description": "A JSON-Pointer for the property to manipulate",
            "type": "string"
          },
          "value": {
            "description": "The value to be used within the operation"
          }
        },
        "required": [
          "op",
          "path"
        ]
      },
      "Item": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "$ref": "#/components/schemas/Fingerprintable"
          },
          {
            "$ref": "#/components/schemas/StatementsBearing"
          }
        ]
      },
      "Property": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "$ref": "#/components/schemas/Fingerprintable"
          },
          {
            "$ref": "#/components/schemas/StatementsBearing"
          },
          {
            "type": "object",
            "properties": {
              "datatype": {
                "type": "string"
              }
            },
            "required": [
              "datatype"
            ]
          }
        ]
      },
      "Fingerprintable": {
        "type": "object",
        "properties": {
          "labels": {
            "$ref": "#/components/schemas/Labels"
          },
          "descriptions": {
            "$ref": "#/components/schemas/Descriptions"
          },
          "aliases": {
            "$ref": "#/components/schemas/Aliases"
          }
        },
        "required": [
          "labels",
          "descriptions",
          "aliases"
        ]
      },
      "StatementsBearing": {
        "type": "object",
        "properties": {
          "statements": {
            "type": "object"
          }
        },
        "required": [
          "statements"
        ]
      },
      "Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "Term": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "language",
          "value"
        ]
      },
      "QualifierHash": {
        "type": "string"
      },
      "ReferenceHash": {
        "type": "string"
      },
      "Statement": {
        "type": "object"
      },
      "Sitelink": {
        "type": "object"
      },
      "Snak": {
        "type": "object"
      },
      "SnakMap": {
        "type": "object"
      },
      "MediawikiEditComment": {
        "type": "string"
      },
      "MediawikiDeletionReason": {
        "type": "string"
      },
      "MediawikiEditTags": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MediawikiEditTag"
        }
      },
      "MediawikiEditTag": {
        "type": "string"
      }
    }
  },
  "tags": [
    {
      "name": "entities",
      "description": "Wikibase Entities",
      "externalDocs": {
        "description": "Wikibase Data Model - Values",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Values"
      }
    },
    {
      "name": "items",
      "description": "Wikibase Items",
      "externalDocs": {
        "description": "Wikibase Datamodel - Items",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Items"
      }
    },
    {
      "name": "statements",
      "description": "Wikibase Statements",
      "externalDocs": {
        "description": "Wikibase Data Model - Statements",
        "url": "https://www.mediawiki.org/wiki/Wikibase/DataModel#Statements"
      }
    }
  ],
  "paths": {
    "/entities/{entityType}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Retrieve a list of Wikibase Entities (Items or Properties)",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityList"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "tags": [
          "entities"
        ],
        "summary": "Create a new Wikibase Entity",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          }
        ],
        "requestBody": {
          "description": "Edit payload containing a Wikibase entity object (Item / Property)",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/Entity"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/MediawikiEditComment"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/MediawikiEditTags"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Entity"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Single Entity",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Entity"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "tags": [
          "entities"
        ],
        "summary": "Replace a Wikibase Entity by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1entities~1%7BentityType%7D/post/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Entity"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "tags": [
          "entities"
        ],
        "summary": "Update a Wikibase Entity by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "description": "A list of JSON-PATCH objects that describe changes to the resource",
          "required": true,
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentPatch"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Entity"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "entities"
        ],
        "summary": "Single Entity",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "description": "Delete payload including a reason for deletion",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "reason": {
                    "$ref": "#/components/schemas/MediawikiDeletionReason"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/MediawikiEditTags"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}/aliases": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Retrieves an entity's alias lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityAliasesList"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "tags": [
          "entities"
        ],
        "summary": "Updates an entity's alias lists",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1entities~1%7BentityType%7D~1%7BentityId%7D/patch/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityAliasesList"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}/aliases/{lang}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Retrieves an entity's alias list by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityAliases"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "tags": [
          "entities"
        ],
        "summary": "Add / Replace a whole alias list by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "requestBody": {
          "description": "Edit payload containing list of Aliases",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "aliases": {
                    "$ref": "#/components/schemas/AliasList"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/MediawikiEditComment"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/MediawikiEditTags"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityDescription"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "tags": [
          "entities"
        ],
        "summary": "Updates an entity's alias list by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1entities~1%7BentityType%7D~1%7BentityId%7D/patch/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityAliases"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "entities"
        ],
        "summary": "Deletes an entity's alias list by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/delete/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}/descriptions": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Retrieves an entity's description list",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityDescriptionList"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "tags": [
          "entities"
        ],
        "summary": "Updates an entity's description list",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1entities~1%7BentityType%7D~1%7BentityId%7D/patch/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityDescriptionList"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}/descriptions/{lang}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Retrieves an entity's description by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityDescription"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "tags": [
          "entities"
        ],
        "summary": "Add / Replace a description to an entity by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1entities~1%7BentityType%7D~1%7BentityId%7D~1labels~1%7Blang%7D/put/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityDescription"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "entities"
        ],
        "summary": "Deletes an entity's description by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/delete/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}/labels": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Retrieves an entity's labels list",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityLabelList"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "tags": [
          "entities"
        ],
        "summary": "Updates an entity's label list",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1entities~1%7BentityType%7D~1%7BentityId%7D/patch/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityLabelList"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}/labels/{lang}": {
      "get": {
        "tags": [
          "entities"
        ],
        "summary": "Retrieve an entity's label by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityLabel"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "tags": [
          "entities"
        ],
        "summary": "Add / Replace a label to an entity by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "requestBody": {
          "description": "Edit payload containing an object with information about a value and the language it is in",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "term": {
                    "$ref": "#/components/schemas/Term"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/MediawikiEditComment"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/MediawikiEditTags"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntityLabel"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "entities"
        ],
        "summary": "Delete an entity's label by language",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/delete/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/{entityType}/{entityId}/statements": {
      "get": {
        "tags": [
          "entities",
          "statements"
        ],
        "summary": "Retrieve a list of entity Statements",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StatementList"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "tags": [
          "entities",
          "statements"
        ],
        "summary": "Add a new Statement to an entity (Item | Property)",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityType"
          },
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/put/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Statement"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{entityId}/sitelinks": {
      "get": {
        "tags": [
          "items"
        ],
        "summary": "Retrieves an item's sitelinks",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SitelinkList"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "tags": [
          "items"
        ],
        "summary": "Creates an item's sitelink",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          }
        ],
        "requestBody": {
          "description": "A Wikibase Sitelink object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sitelink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SitelinkList"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/entities/items/{entityId}/sitelinks/{wikiId}": {
      "get": {
        "tags": [
          "items"
        ],
        "summary": "Retrieves an Item's sitelink by wiki-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/wikiId"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sitelink"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "tags": [
          "items"
        ],
        "summary": "Updates an Item's sitelink by wiki-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/wikiId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1entities~1%7BentityType%7D~1%7BentityId%7D/patch/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Sitelink"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "items"
        ],
        "summary": "Item's sitelink by wiki-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/wikiId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/delete/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/statements/{statementId}": {
      "get": {
        "tags": [
          "statements"
        ],
        "summary": "Retrieves a single Statement from an entity (items | properties)",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Statement"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "patch": {
        "tags": [
          "statements"
        ],
        "summary": "Updates a Wikibase Statement by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/put/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Statement"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "tags": [
          "statements"
        ],
        "summary": "Replaces a Wikibase Statement by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          }
        ],
        "requestBody": {
          "description": "Edit payload containing a Wikibase Statement object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "statement": {
                    "$ref": "#/components/schemas/Statement"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/MediawikiEditComment"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/MediawikiEditTags"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Statement"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "statements"
        ],
        "summary": "Single statement from an entity (items | properties)",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          }
        ],
        "requestBody": {
          "description": "Edit payload containing edit meta data",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "$ref": "#/components/schemas/MediawikiEditComment"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/MediawikiEditTags"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/statements/{statementId}/qualifiers": {
      "get": {
        "tags": [
          "statements"
        ],
        "summary": "Lists qualifiers for a Statement",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/qualifiers`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SnakList"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "tags": [
          "statements"
        ],
        "summary": "Add a new Qualifier to a Statement",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/qualifiers`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          }
        ],
        "requestBody": {
          "description": "A Wikibase Snak object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snak"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/QualifierHash"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/statements/{statementId}/qualifiers/{qualifierHash}": {
      "get": {
        "tags": [
          "statements"
        ],
        "summary": "Single qualifier by hash",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/qualifiers/{qualifierHash}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/qualifierHash"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Snak"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "tags": [
          "statements"
        ],
        "summary": "Update a qualifier",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/qualifiers/{qualifierHash}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/qualifierHash"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D~1qualifiers/post/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/QualifierHash"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "statements"
        ],
        "summary": "Single qualifier by hash",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/qualifiers/{qualifierHash}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/qualifierHash"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/delete/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/statements/{statementId}/references": {
      "get": {
        "tags": [
          "statements"
        ],
        "summary": "Lists references for a Statement",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/references`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SnakMapList"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "tags": [
          "statements"
        ],
        "summary": "Add a new Reference to a Statement",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/references`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          }
        ],
        "requestBody": {
          "description": "A Wikibase SnakMap object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnakMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReferenceHash"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/statements/{statementId}/references/{referenceHash}": {
      "get": {
        "tags": [
          "statements"
        ],
        "summary": "Single reference by hash",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/references/{referenceHash}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/referenceHash"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/ifNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ifModifiedSince"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SnakMap"
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "post": {
        "tags": [
          "statements"
        ],
        "summary": "Update a reference",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/references/{referenceHash}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/referenceHash"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D~1references/post/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReferenceHash"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "tags": [
          "statements"
        ],
        "summary": "Single reference by hash",
        "description": "This endpoint is also accessible through `/entities/(items|properties)/{entityId}/statements/{statementId}/references/{referenceHash}`",
        "parameters": [
          {
            "$ref": "#/components/parameters/statementId"
          },
          {
            "$ref": "#/components/parameters/referenceHash"
          }
        ],
        "requestBody": {
          "$ref": "#/paths/~1statements~1%7BstatementId%7D/delete/requestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OK"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  }
}
